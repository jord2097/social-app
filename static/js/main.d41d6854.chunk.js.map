{"version":3,"sources":["hand.svg","Likes.js","postcard.js","view.js","Add.js","components/Login/Login.jsx","components/Registration/Registration.jsx","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","id","y","width","height","rx","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","LikeButton","useState","liked","setLiked","clicked","setClicked","particleList","Array","from","Table","onClick","changeLikes","postID","onAnimationEnd","className","cn","map","_","index","style","transform","likes","Postcard","userID","localStorage","getItem","replace","Card","Header","as","userName","Body","Image","fluid","src","img","Text","postMsg","Likes","Footer","View","posts","current","Add","state","changeState","toastr","options","handleChange","e","newState","name","value","c","r","Math","random","toString","Form","onSubmit","preventDefault","updateList","submithandler","Group","controlId","Label","Control","type","onChange","placeholder","Button","variant","Login","emaillog","setEmaillog","passwordlog","setPasswordlog","flag","setFlag","home","setHome","pass","mail","console","log","event","Alert","color","Registration","setName","email","setEmail","password","setPassword","login","setLogin","info","setItem","JSON","stringify","href","App","changePosts","listItem","prevState","useEffect","listContents","parse","post","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","to","Container","element","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d41d6854.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Icon\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"hand\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle 1\",\n  y: 21.9999,\n  width: 20,\n  height: 45,\n  rx: 5,\n  fill: \"white\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"thumb-4\",\n  d: \"M24 23.9999H79C81.7614 23.9999 84 26.2385 84 28.9999V30.9999C84 33.7613 81.7614 35.9999 79 35.9999H24V23.9999Z\",\n  fill: \"white\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"thumb-3\",\n  d: \"M24 53.9999H64C66.7614 53.9999 69 56.2385 69 58.9999V60.9999C69 63.7613 66.7614 65.9999 64 65.9999H24V53.9999Z\",\n  fill: \"white\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"thumb-2\",\n  d: \"M24 43.9999H69C71.7614 43.9999 74 46.2385 74 48.9999V50.9999C74 53.7613 71.7614 55.9999 69 55.9999H24V43.9999Z\",\n  fill: \"white\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"thumb-1\",\n  d: \"M24 33.9999H74C76.7614 33.9999 79 36.2385 79 38.9999V40.9999C79 43.7613 76.7614 45.9999 74 45.9999H24V33.9999Z\",\n  fill: \"white\"\n})), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"thumb-start\",\n  d: \"M34 29.5506C37.1438 28.5631 44.1537 25.192 47.0428 19.6065\",\n  stroke: \"white\",\n  strokeWidth: 12,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  id: \"thumb-end\",\n  d: \"M44.6172 22.7471C46.9813 20.4514 51.7265 14.2881 51.7952 8.00001\",\n  stroke: \"white\",\n  strokeWidth: 12,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}));\n\nvar SvgHand = function SvgHand(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 84,\n    height: 67,\n    viewBox: \"0 0 84 67\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgHand, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/hand.d73d3fa4.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\nimport cn from \"classnames\";\r\nimport Table from 'react-bootstrap/Table'\r\nimport { ReactComponent as Hand } from \"./hand.svg\";\r\nimport \"./styles.scss\"\r\n\r\n\r\nconst LikeButton = (props) => {  \r\n  const [liked, setLiked] = useState(null);  \r\n  const [clicked, setClicked] = useState(false);  \r\n  const particleList = Array.from(Array(10)) \r\n  \r\n  return (\r\n    <Table>\r\n        <tbody>\r\n            <tr>\r\n                <td>\r\n                    <button\r\n                    onClick={() => {\r\n                        setLiked(!liked);\r\n                        setClicked(true);                                              \r\n                        props.changeLikes(props.postID)\r\n                                               \r\n                    }}\r\n                    onAnimationEnd={() => setClicked(false)}\r\n                    className={cn(\"like-button-wrapper\", {\r\n                        liked,\r\n                        clicked,\r\n                    })}\r\n                    >\r\n                    {liked && (\r\n                        <div className=\"particles\">\r\n                        {particleList.map((_, index) => (\r\n                            <div\r\n                            className=\"particle-rotate\"\r\n                            style={{\r\n                                transform: `rotate(${\r\n                                (360 / particleList.length) * index + 1\r\n                                }deg)`,\r\n                            }}\r\n                            >\r\n                            <div className=\"particle-tick\" />\r\n                            </div>\r\n                        ))}\r\n                        </div>\r\n                    )}\r\n                    <div className=\"like-button\">\r\n                        <Hand />\r\n                        <span>Like</span>\r\n                        <span className={cn(\"suffix\", { liked })}>d</span>\r\n                    </div>\r\n                    </button>\r\n                </td>\r\n                <td className=\"likecount\">\r\n                    {props.likes}\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </Table>\r\n   \r\n  );\r\n};\r\n\r\nexport default LikeButton;","import React, { useContext } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Image from 'react-bootstrap/Image'\r\nimport Likes from './Likes'\r\nimport './postcard.css'\r\n\r\n\r\nfunction Postcard(props){\r\n    const userID = localStorage.getItem(\"userID\").replace(/\"/g, \"\");\r\n    \r\n\r\n    return(\r\n        <Card className=\"mx-auto text-center mt-2\">\r\n            {userID.length > 0 && <Card.Header as=\"h5\">{props.userName} (@{userID})</Card.Header> }           \r\n            {userID.length <= 0 && <Card.Header as=\"h5\">{props.userName}</Card.Header>}          \r\n            <Card.Body>\r\n                <Image fluid className=\"mx-auto\" src={props.img}/>\r\n                <Card.Text>{props.postMsg}</Card.Text>                             \r\n                <Likes postID={props.postID} likes={props.likes} changeLikes={props.changeLikes}  />\r\n                {/* pass through change likes function */}\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">{props.postID}</Card.Footer>\r\n        </Card>\r\n    ) \r\n\r\n    \r\n    \r\n}\r\n\r\nexport default Postcard","import React from 'react';\r\nimport './App.css';\r\nimport Postcard from './postcard';\r\n\r\nfunction View (props) {\r\n    const buildPosts = () => {\r\n      return props.posts.map((current) => (\r\n        <Postcard postID={current.postID} userName={current.userName} postMsg={current.postMsg} img={current.img} likes={current.likes} changeLikes={props.changeLikes} />\r\n        // pass through change likes function\r\n      ))\r\n    }\r\n  return (\r\n      <>\r\n      <div>\r\n        {buildPosts()}\r\n      </div>   \r\n      </>\r\n  \r\n  )  \r\n\r\n  }\r\n\r\n  \r\n  \r\n\r\n\r\n/* function View(props){    \r\n  const buildRows = () =>  {\r\n    return props.posts.map((current) => (\r\n      <tr key={current.postID}>\r\n        <td>\r\n          {current.postID}\r\n        </td>\r\n        <td>\r\n          {current.userName}\r\n        </td>\r\n        <td>\r\n          {current.postMsg}\r\n        </td>\r\n        <td>\r\n          {current.likes}\r\n        </td>\r\n      </tr>\r\n    )\r\n    )\r\n  }\r\n\r\n\r\n    return (\r\n      <>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>id</th>\r\n              <th>username</th>\r\n              <th>message</th>\r\n              <th>likes</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {buildRows()}\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n    );\r\n\r\n} */\r\n\r\n\r\nexport default View;\r\n","import React, {useState} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport toastr from 'toastr'\r\nimport 'toastr/build/toastr.min.css'\r\n\r\nfunction Add(props){\r\n    const[state, changeState] = useState({\r\n        postID: 0,\r\n        userName: \"\",\r\n        postMsg: \"\",\r\n        img: \"\",\r\n        likes: 0\r\n    })\r\n    toastr.options = {\r\n        \"closeButton\": false,\r\n        \"debug\": false,\r\n        \"newestOnTop\": false,\r\n        \"progressBar\": false,\r\n        \"positionClass\": \"toast-top-center\",\r\n        \"preventDuplicates\": false,\r\n        \"onclick\": null,\r\n        \"showDuration\": \"300\",\r\n        \"hideDuration\": \"1000\",\r\n        \"timeOut\": \"5000\",\r\n        \"extendedTimeOut\": \"1000\",\r\n        \"showEasing\": \"swing\",\r\n        \"hideEasing\": \"linear\",\r\n        \"showMethod\": \"fadeIn\",\r\n        \"hideMethod\": \"fadeOut\"\r\n      }\r\n\r\n    const genUUID = () => {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8)\r\n        return v.toString(16)\r\n    })\r\n    }    \r\n\r\n    const submithandler =(e) =>{\r\n        e.preventDefault()\r\n        props.updateList(state.postID, state.userName, state.postMsg, state.img, state.likes)\r\n        toastr[\"success\"](\"You successfully posted!\", \"Success\")\r\n        changeState({\r\n            postID: 0,\r\n            userName: \"\",\r\n            postMsg: \"\",\r\n            img: \"\",\r\n            likes: 0\r\n        })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        // console.log(e)\r\n        const newState = { ...state };\r\n        newState[e.target.name] = e.target.value;\r\n        newState.postID = genUUID()\r\n        changeState(newState);\r\n    }\r\n\r\n    return(\r\n        <div className='container'>\r\n            <Form onSubmit={(e)=> submithandler(e)}>\r\n                {/* <Form.Group controlId=\"postID\">\r\n                    <Form.Label>Post ID</Form.Label>\r\n                    <Form.Control name=\"postID\" type=\"number\" value={state.postID} onChange={(e)=> handleChange(e)}/>\r\n                </Form.Group> */}\r\n                <Form.Group controlId=\"userName\">\r\n                    <Form.Label>Display Name</Form.Label>\r\n                    <Form.Control name=\"userName\" type=\"text\" value={state.userName} onChange={(e)=> handleChange(e)}/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"postMsg\">\r\n                    <Form.Label>Post Text</Form.Label>\r\n                    <Form.Control name=\"postMsg\" type=\"text\" value={state.postMsg} onChange={(e)=> handleChange(e)}/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"likes\">\r\n                    <Form.Label>Likes</Form.Label>\r\n                    <Form.Control name=\"likes\" type=\"number\" value={state.likes} onChange={(e)=> handleChange(e)}/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"img\">\r\n                    <Form.Label>Post Image</Form.Label>\r\n                    <Form.Control name=\"img\" type=\"text\" value={state.img} placeholder=\"Insert Image URL\" onChange={(e)=> handleChange(e)}/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n\r\n\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Add;","import React, { useState } from 'react'\r\nimport { Alert } from 'react-bootstrap';\r\nimport View from '../../view';\r\nimport Add from \"../../Add\"\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    const [emaillog, setEmaillog] = useState(\" \");\r\n    const [passwordlog, setPasswordlog] = useState(\" \");\r\n\r\n    const [flag, setFlag] = useState(false);\r\n\r\n    const [home, setHome] = useState(true);\r\n\r\n\r\n    function handleLogin(e) {\r\n        e.preventDefault();\r\n        let pass = localStorage.getItem('hardikSubmissionPassword').replace(/\"/g, \"\");\r\n        let mail = localStorage.getItem('hardikSubmissionEmail').replace(/\"/g, \"\");\r\n        // .replace(/\"/g,\"\") is used to remove the double quotes for the string\r\n\r\n        if (!emaillog || !passwordlog) {\r\n            setFlag(true);\r\n            console.log(\"EMPTY\");\r\n        } else if ((passwordlog !== pass) || (emaillog !== mail)) {\r\n            setFlag(true);\r\n        } else {\r\n            setHome(!home);\r\n            setFlag(false);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {home ? <form onSubmit={handleLogin}>\r\n                <h3>LogIn</h3>\r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" onChange={(event) => setEmaillog(event.target.value)} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={(event) => setPasswordlog(event.target.value)} />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">Login</button>\r\n\r\n                {flag && <Alert color='primary' variant=\"warning\" >\r\n                    Fill correct please!\r\n                        </Alert>}\r\n            </form>\r\n                : <Add posts={props.posts} changeLikes={props.changeLikes} updateList={\r\n                    (postID, userName, postMsg, img, likes)=> props.updateList(postID, userName, postMsg, img, likes)} />\r\n                // <View posts={props.posts} changeLikes={props.changeLikes}  />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react'\r\nimport { Form, Alert } from 'react-bootstrap';\r\nimport Login from '../Login/Login';\r\n\r\n\r\nfunction Registration(props) {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    /* const [phone, setPhone] = useState(\"\");\r\n    const [profession, setProfession] = useState(\"\"); */\r\n\r\n    const [flag, setFlag] = useState(false);\r\n    const [login, setLogin] = useState(true);\r\n    const [info, setInfo] = useState(true);\r\n\r\n\r\n\r\n\r\n    // on form submit...\r\n    function handleFormSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (!name || !email || !password ) {\r\n            setFlag(true);\r\n\r\n        } else {\r\n            setFlag(false);\r\n            localStorage.setItem(\"userID\", JSON.stringify(name))\r\n            localStorage.setItem(\"hardikSubmissionEmail\", JSON.stringify(email));\r\n            localStorage.setItem(\"hardikSubmissionPassword\", JSON.stringify(password));\r\n            console.log(\"Saved in Local Storage\");\r\n\r\n            setLogin(!login)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // Directly to the login page\r\n    function handleClick() {\r\n        setLogin(!login)\r\n    }\r\n\r\n    /* // Company Info\r\n    function infoClick() {\r\n        setInfo(!info)\r\n    } */\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            \r\n            {info ? <div> {login ? <form onSubmit={handleFormSubmit}>\r\n                <h3>Register</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Username</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter @username\" name=\"name\" onChange={(event) => setName(event.target.value)} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" onChange={(event) => setEmail(event.target.value)} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" onChange={(event) => setPassword(event.target.value)} />\r\n                </div>\r\n\r\n\r\n               \r\n\r\n\r\n                <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">Register</button>\r\n                <p className=\"forgot-password text-right\">\r\n                    Already registered <a href=\"#\" onClick={handleClick} >log in?</a>\r\n                </p>\r\n                {flag &&\r\n                    <Alert color='primary' variant=\"danger\" >\r\n                        I got it you are in hurry! But every Field is important!\r\n                </Alert>\r\n                }\r\n\r\n            </form> : <Login posts={props.posts} changeLikes={props.changeLikes} updateList={\r\n              (postID, userName, postMsg, img, likes)=> props.updateList(postID, userName, postMsg, img, likes)} />}\r\n            </div> : <div>\r\n                    \r\n                </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Registration\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Routes, Route, Link} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport './App.css';\r\nimport View from './view';\r\nimport Add from './Add';\r\nimport Postcard from './postcard';\r\nimport Registration from './components/Registration/Registration';\r\nimport Login from './components/Login/Login'\r\nimport { remove } from 'toastr';\r\n\r\n\r\nfunction App(){\r\n    const [posts, changePosts] = useState([])      \r\n\r\n    const updateList = (postID, userName, postMsg, img, likes)=>{\r\n      const listItem = {postID, userName, postMsg, img, likes}      \r\n      localStorage.setItem(\"list\", JSON.stringify([...posts, listItem]))\r\n      changePosts((prevState)=> [...prevState, listItem])      \r\n    }         \r\n\r\n    useEffect(() => {      \r\n      const listContents = localStorage.getItem(\"list\")      \r\n      changePosts(JSON.parse(listContents)||[])\r\n    }, [])    \r\n    \r\n    \r\n    const changeLikes = (id) => changePosts((posts) => posts.map((post) => {\r\n      if (post.postID !== id) return post;\r\n      return {...post, likes: post.likes -1 + 2};\r\n      \r\n    }));    \r\n    \r\n    \r\n\r\n    return (\r\n      <div>\r\n          <Navbar bg=\"light\" expand=\"md\">\r\n            <Navbar.Brand>Fakebuk</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Link className=\"nav-link\" to=\"/home\">Home</Link>\r\n                {/* <Link className=\"nav-link\" to=\"/view\">View</Link> */}\r\n                <Link className=\"nav-link\" to=\"/add\">Add</Link>\r\n                <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n                <Link className=\"nav-link\" to=\"/register\">Register</Link>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n          <Container>\r\n            <Routes>\r\n              <Route index element={<Registration posts={posts} changeLikes={changeLikes} updateList={\r\n              (postID, userName, postMsg, img, likes)=> updateList(postID, userName, postMsg, img, likes)} />}/>\r\n              <Route path=\"/home\" element={<View posts={posts} changeLikes={changeLikes}/>}/>\r\n              <Route path=\"/add\" element={<Add updateList={\r\n              (postID, userName, postMsg, img, likes)=> updateList(postID, userName, postMsg, img, likes)}/>}/>\r\n              <Route path=\"/login\" element={<Login updateList={\r\n              (postID, userName, postMsg, img, likes)=> updateList(postID, userName, postMsg, img, likes)}/>} />\r\n              <Route path=\"/register\" element={<Registration posts={posts} changeLikes={changeLikes} updateList={\r\n              (postID, userName, postMsg, img, likes)=> updateList(postID, userName, postMsg, img, likes)} />} />\r\n              {/* <Route path=\"/view\" element={<View posts={posts}/>}/>   */}\r\n            </Routes>          \r\n          </Container>\r\n      </div>\r\n    );\r\n\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {HashRouter as Router} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n    <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}